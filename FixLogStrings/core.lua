--[[
Notes:

the fix function is taken from SW_FixLogStrings. Credits goes to Artack

This addon does exactly the same transformation, but actively, instead
of relying on addons to call a function themselves.

The list of patterns has been generated from Parser-3.0's source code.

]]

local _G = _G
local string = _G.string
local ipairs = _G.ipairs
local gsub = string.gsub
local find = string.find

local debug
if false then
	debug = function (s, ...)
		if find(s, "%", 1, true) then
			s = s:format(...)
		end
		_G.DEFAULT_CHAT_FRAME:AddMessage("FixLogStrings : "..s)
	end
else
	debug = function () end
end

local PATTERNS = {
	"AURAADDEDOTHERHARMFUL",
	"AURAADDEDOTHERHELPFUL",
	"AURAADDEDSELFHARMFUL",
	"AURAADDEDSELFHELPFUL",
	"AURAAPPLICATIONADDEDOTHERHARMFUL",
	"AURAAPPLICATIONADDEDOTHERHELPFUL",
	"AURAAPPLICATIONADDEDSELFHARMFUL",
	"AURAAPPLICATIONADDEDSELFHELPFUL",
	"AURADISPELOTHER",
	"AURADISPELOTHER2",
	"AURADISPELOTHER3",
	"AURADISPELSELF",
	"AURADISPELSELF2",
	"AURADISPELSELF3",
	"AURAREMOVEDOTHER",
	"AURAREMOVEDSELF",
	"COMBATHITCRITOTHEROTHER",
	"COMBATHITCRITOTHERSELF",
	"COMBATHITCRITSCHOOLOTHEROTHER",
	"COMBATHITCRITSCHOOLOTHERSELF",
	"COMBATHITCRITSCHOOLSELFOTHER",
	"COMBATHITCRITSELFOTHER",
	"COMBATHITOTHEROTHER",
	"COMBATHITOTHERSELF",
	"COMBATHITSCHOOLOTHEROTHER",
	"COMBATHITSCHOOLOTHERSELF",
	"COMBATHITSCHOOLSELFOTHER",
	"COMBATHITSELFOTHER",
	"COMBATLOG_DISHONORGAIN",
	"COMBATLOG_HONORAWARD",
	"COMBATLOG_HONORGAIN",
	"COMBATLOG_XPGAIN",
	"COMBATLOG_XPGAIN_EXHAUSTION1",
	"COMBATLOG_XPGAIN_EXHAUSTION1_GROUP",
	"COMBATLOG_XPGAIN_EXHAUSTION1_RAID",
	"COMBATLOG_XPGAIN_EXHAUSTION2",
	"COMBATLOG_XPGAIN_EXHAUSTION2_GROUP",
	"COMBATLOG_XPGAIN_EXHAUSTION2_RAID",
	"COMBATLOG_XPGAIN_EXHAUSTION4",
	"COMBATLOG_XPGAIN_EXHAUSTION4_GROUP",
	"COMBATLOG_XPGAIN_EXHAUSTION4_RAID",
	"COMBATLOG_XPGAIN_EXHAUSTION5",
	"COMBATLOG_XPGAIN_EXHAUSTION5_GROUP",
	"COMBATLOG_XPGAIN_EXHAUSTION5_RAID",
	"COMBATLOG_XPGAIN_FIRSTPERSON",
	"COMBATLOG_XPGAIN_FIRSTPERSON_GROUP",
	"COMBATLOG_XPGAIN_FIRSTPERSON_RAID",
	"COMBATLOG_XPGAIN_FIRSTPERSON_UNNAMED",
	"COMBATLOG_XPGAIN_FIRSTPERSON_UNNAMED_GROUP",
	"COMBATLOG_XPGAIN_FIRSTPERSON_UNNAMED_RAID",
	"DAMAGESHIELDOTHEROTHER",
	"DAMAGESHIELDOTHERSELF",
	"DAMAGESHIELDSELFOTHER",
	"DISPELFAILEDOTHEROTHER",
	"DISPELFAILEDOTHERSELF",
	"DISPELFAILEDSELFOTHER",
	"DISPELFAILEDSELFSELF",
	"FACTION_STANDING_CHANGED",
	"FACTION_STANDING_DECREASED",
	"FACTION_STANDING_INCREASED",
	"FEEDPET_LOG_FIRSTPERSON",
	"FEEDPET_LOG_THIRDPERSON",
	"HEALEDCRITOTHER",
	"HEALEDCRITOTHEROTHER",
	"HEALEDCRITOTHERSELF",
	"HEALEDCRITSELF",
	"HEALEDCRITSELFOTHER",
	"HEALEDCRITSELFSELF",
	"HEALEDOTHER",
	"HEALEDOTHEROTHER",
	"HEALEDOTHERSELF",
	"HEALEDSELFOTHER",
	"HEALEDSELFSELF",
	"IMMUNEDAMAGECLASSOTHEROTHER",
	"IMMUNEDAMAGECLASSOTHERSELF",
	"IMMUNEOTHEROTHER",
	"IMMUNEOTHERSELF",
	"IMMUNESPELLOTHER",
	"IMMUNESPELLOTHEROTHER",
	"IMMUNESPELLOTHERSELF",
	"IMMUNESPELLSELF",
	"IMMUNESPELLSELFOTHER",
	"IMMUNESPELLSELFSELF",
	"INSTAKILLOTHER",
	"INSTAKILLSELF",
	"ITEMENCHANTMENTADDOTHEROTHER",
	"ITEMENCHANTMENTADDOTHERSELF",
	"ITEMENCHANTMENTADDSELFOTHER",
	"ITEMENCHANTMENTADDSELFSELF",
	"MISSEDOTHEROTHER",
	"MISSEDOTHERSELF",
	"MISSEDSELFOTHER",
	"OPEN_LOCK_OTHER",
	"OPEN_LOCK_SELF",
	"PARTYKILLOTHER",
	"PERIODICAURADAMAGEOTHER",
	"PERIODICAURADAMAGEOTHEROTHER",
	"PERIODICAURADAMAGEOTHERSELF",
	"PERIODICAURADAMAGESELF",
	"PERIODICAURADAMAGESELFOTHER",
	"PERIODICAURADAMAGESELFSELF",
	"PERIODICAURAHEALOTHEROTHER",
	"PERIODICAURAHEALOTHERSELF",
	"PERIODICAURAHEALSELFOTHER",
	"PERIODICAURAHEALSELFSELF",
	"POWERGAINOTHEROTHER",
	"POWERGAINOTHERSELF",
	"POWERGAINSELFOTHER",
	"POWERGAINSELFSELF",
	"PROCRESISTOTHEROTHER",
	"PROCRESISTOTHERSELF",
	"PROCRESISTSELFOTHER",
	"PROCRESISTSELFSELF",
	"SELFKILLOTHER",
	"SIMPLECASTOTHEROTHER",
	"SIMPLECASTOTHERSELF",
	"SIMPLECASTSELFOTHER",
	"SIMPLECASTSELFSELF",
	"SIMPLEPERFORMOTHEROTHER",
	"SIMPLEPERFORMOTHERSELF",
	"SIMPLEPERFORMSELFOTHER",
	"SIMPLEPERFORMSELFSELF",
	"SPELLBLOCKEDOTHEROTHER",
	"SPELLBLOCKEDOTHERSELF",
	"SPELLBLOCKEDSELFOTHER",
	"SPELLCASTOTHERSTART",
	"SPELLCASTSELFSTART",
	"SPELLDEFLECTEDOTHEROTHER",
	"SPELLDEFLECTEDOTHERSELF",
	"SPELLDEFLECTEDSELFOTHER",
	"SPELLDEFLECTEDSELFSELF",
	"SPELLDODGEDOTHEROTHER",
	"SPELLDODGEDOTHERSELF",
	"SPELLDODGEDSELFOTHER",
	"SPELLDODGEDSELFSELF",
	"SPELLDURABILITYDAMAGEALLOTHEROTHER",
	"SPELLDURABILITYDAMAGEALLOTHERSELF",
	"SPELLDURABILITYDAMAGEALLSELFOTHER",
	"SPELLDURABILITYDAMAGEOTHEROTHER",
	"SPELLDURABILITYDAMAGEOTHERSELF",
	"SPELLDURABILITYDAMAGESELFOTHER",
	"SPELLEVADEDOTHEROTHER",
	"SPELLEVADEDOTHERSELF",
	"SPELLEVADEDSELFOTHER",
	"SPELLEVADEDSELFSELF",
	"SPELLEXTRAATTACKSOTHER",
	"SPELLEXTRAATTACKSOTHER_SINGULAR",
	"SPELLEXTRAATTACKSSELF",
	"SPELLEXTRAATTACKSSELF_SINGULAR",
	"SPELLFAILCASTSELF",
	"SPELLFAILPERFORMSELF",
	"SPELLIMMUNEOTHER",
	"SPELLIMMUNEOTHEROTHER",
	"SPELLIMMUNEOTHERSELF",
	"SPELLIMMUNESELF",
	"SPELLIMMUNESELFOTHER",
	"SPELLIMMUNESELFSELF",
	"SPELLINTERRUPTOTHEROTHER",
	"SPELLINTERRUPTOTHERSELF",
	"SPELLINTERRUPTSELFOTHER",
	"SPELLLOGABSORBOTHER",
	"SPELLLOGABSORBOTHEROTHER",
	"SPELLLOGABSORBOTHERSELF",
	"SPELLLOGABSORBSELF",
	"SPELLLOGABSORBSELFOTHER",
	"SPELLLOGABSORBSELFSELF",
	"SPELLLOGCRITOTHEROTHER",
	"SPELLLOGCRITOTHERSELF",
	"SPELLLOGCRITSCHOOLOTHER",
	"SPELLLOGCRITSCHOOLOTHEROTHER",
	"SPELLLOGCRITSCHOOLOTHERSELF",
	"SPELLLOGCRITSCHOOLSELF",
	"SPELLLOGCRITSCHOOLSELFOTHER",
	"SPELLLOGCRITSCHOOLSELFSELF",
	"SPELLLOGCRITSELF",
	"SPELLLOGCRITSELFOTHER",
	"SPELLLOGCRITSELFSELF",
	"SPELLLOGOTHER",
	"SPELLLOGOTHEROTHER",
	"SPELLLOGOTHERSELF",
	"SPELLLOGSCHOOLOTHER",
	"SPELLLOGSCHOOLOTHEROTHER",
	"SPELLLOGSCHOOLOTHERSELF",
	"SPELLLOGSCHOOLSELF",
	"SPELLLOGSCHOOLSELFOTHER",
	"SPELLLOGSCHOOLSELFSELF",
	"SPELLLOGSELF",
	"SPELLLOGSELFOTHER",
	"SPELLLOGSELFSELF",
	"SPELLMISSOTHEROTHER",
	"SPELLMISSOTHERSELF",
	"SPELLMISSSELFOTHER",
	"SPELLMISSSELFSELF",
	"SPELLPARRIEDOTHEROTHER",
	"SPELLPARRIEDOTHERSELF",
	"SPELLPARRIEDSELFOTHER",
	"SPELLPARRIEDSELFSELF",
	"SPELLPERFORMOTHERSTART",
	"SPELLPERFORMSELFSTART",
	"SPELLPOWERDRAINOTHER",
	"SPELLPOWERDRAINOTHEROTHER",
	"SPELLPOWERDRAINOTHERSELF",
	"SPELLPOWERDRAINSELF",
	"SPELLPOWERDRAINSELFOTHER",
	"SPELLPOWERDRAINSELFSELF",
	"SPELLPOWERLEECHOTHEROTHER",
	"SPELLPOWERLEECHOTHERSELF",
	"SPELLPOWERLEECHSELFOTHER",
	"SPELLREFLECTOTHEROTHER",
	"SPELLREFLECTOTHERSELF",
	"SPELLREFLECTSELFOTHER",
	"SPELLREFLECTSELFSELF",
	"SPELLRESISTOTHER",
	"SPELLRESISTOTHEROTHER",
	"SPELLRESISTOTHERSELF",
	"SPELLRESISTSELF",
	"SPELLRESISTSELFOTHER",
	"SPELLRESISTSELFSELF",
	"SPELLSPLITDAMAGEOTHEROTHER",
	"SPELLSPLITDAMAGEOTHERSELF",
	"SPELLSPLITDAMAGESELFOTHER",
	"SPELLTERSEPERFORM_OTHER",
	"SPELLTERSEPERFORM_SELF",
	"SPELLTERSE_OTHER",
	"SPELLTERSE_SELF",
	"TRADESKILL_LOG_FIRSTPERSON",
	"TRADESKILL_LOG_THIRDPERSON",
	"UNITDESTROYEDOTHER",
	"UNITDIESOTHER",
	"UNITDIESSELF",
	"VSABSORBOTHEROTHER",
	"VSABSORBOTHERSELF",
	"VSABSORBSELFOTHER",
	"VSBLOCKOTHEROTHER",
	"VSBLOCKOTHERSELF",
	"VSBLOCKSELFOTHER",
	"VSDEFLECTOTHEROTHER",
	"VSDEFLECTOTHERSELF",
	"VSDODGEOTHEROTHER",
	"VSDODGEOTHERSELF",
	"VSDODGESELFOTHER",
	"VSENVIRONMENTALDAMAGE_DROWNING_OTHER",
	"VSENVIRONMENTALDAMAGE_DROWNING_SELF",
	"VSENVIRONMENTALDAMAGE_FALLING_OTHER",
	"VSENVIRONMENTALDAMAGE_FALLING_SELF",
	"VSENVIRONMENTALDAMAGE_FATIGUE_OTHER",
	"VSENVIRONMENTALDAMAGE_FATIGUE_SELF",
	"VSENVIRONMENTALDAMAGE_FIRE_OTHER",
	"VSENVIRONMENTALDAMAGE_FIRE_SELF",
	"VSENVIRONMENTALDAMAGE_LAVA_OTHER",
	"VSENVIRONMENTALDAMAGE_LAVA_SELF",
	"VSENVIRONMENTALDAMAGE_SLIME_OTHER",
	"VSENVIRONMENTALDAMAGE_SLIME_SELF",
	"VSEVADEOTHEROTHER",
	"VSEVADEOTHERSELF",
	"VSEVADESELFOTHER",
	"VSIMMUNEOTHEROTHER",
	"VSIMMUNEOTHERSELF",
	"VSIMMUNESELFOTHER",
	"VSPARRYOTHEROTHER",
	"VSPARRYOTHERSELF",
	"VSPARRYSELFOTHER",
	"VSRESISTOTHEROTHER",
	"VSRESISTOTHERSELF",
}

-- fix ambiguous patterns
local fix
do
	local locale = _G.GetLocale()
	
	if locale == "enUS" or locale == "enGB" then
		fix = function (s)
			return gsub(s, "(%%%d?$?s)('s)", "%1 %2")
		end
	elseif locale == "deDE" then
		fix = function (s)
			return gsub(s, "(%%%d?$?s)(%a%s)", "%1'%2")
		end
	elseif locale == "zhCN" or locale == "zhTW" then
		fix = function (s)
			if
				find(s, "的%s", 1, true) or
				find(s, "对%s", 1, true) or
				find(s, "击中%s", 1, true) or
				find(s, "對%s", 1, true) or
				find(s, "擊中%s", 1, true) 
			then
				return gsub(gsub(gsub(gsub(s
					, "(%%%d?$?s)([^%s+].)", "%1 %2")
					, "(.[^%s+])(%%%d?$?s)", "%1 %2")
					, "(.[^%s+])(%%%d?$?d)", "%1 %2")
					, "(%%%d?$?d)([^%s+].)", "%1 %2")
			end
		end
	elseif locale == "frFR" then
		fix = function(s)
			return gsub(s, "(%%%d?$?s) de (%%%d?$?s)", "%1 DE %2")
		end
	end
end

if fix then
	for _, pattern in ipairs(PATTERNS) do
		local source = _G[pattern]
		local dest = fix(source)
		if dest and dest ~= source then
			debug("%s changed from %q to %q to fix ambiguity", pattern, source, dest)
			_G[pattern] = dest
		end
	end
end

-- fix patterns being exactly the same
local check = {}
for _, pattern in ipairs(PATTERNS) do
	local source = _G[pattern]
	local dest = source
	while check[dest] do
		dest = dest.." "
	end
	check[dest] = pattern
	if dest ~= source then
		debug("%s was the same as %s", pattern, check[source])
		_G[pattern] = dest
	end
end

--[[
-- SW_FixLogStrings compatibility layer.
-- this is not really necessary

if _G.GetAddOnInfo("SW_FixLogStrings") then
	_G.DisableAddOn("SW_FixLogStrings")
	local dummy = function (s) return s end
	_G.SW_FixLogStrings = dummy
	_G.SW_FixLogMakeUnique = dummy
	if _G.SW_SYNC_DO == false then
		_G.SW_SYNC_DO = true
	end
end

]]
